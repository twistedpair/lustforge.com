<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hidden in plain Site on lust.dev</title><link>https://lust.dev/tags/hidden-in-plain-site/</link><description>Recent content in Hidden in plain Site on lust.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joe Lust</copyright><lastBuildDate>Wed, 27 Feb 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/hidden-in-plain-site/index.xml" rel="self" type="application/rss+xml"/><item><title>Download InfoQ Books and PDFs without Login</title><link>https://lust.dev/2013/02/27/download-infoq-books-and-pdfs-without-login/</link><pubDate>Wed, 27 Feb 2013 00:00:00 +0000</pubDate><guid>https://lust.dev/2013/02/27/download-infoq-books-and-pdfs-without-login/</guid><description>I just read Good Relationships by Michael Hunger. It was a great read to get up to speed on Spring Data Neo4J quickly, and also the only reference out there.
But, it requires you join InfoQ and give them your personal information to sell to whoever they please. No thanks.
Well, let’s look at those links, what do they really do? Pop open the inspector and look at the link. We see that it calls loginAndDisplayDownloadLink().</description></item><item><title>Windows Downloads without Windows Genuine Advantage</title><link>https://lust.dev/2011/07/02/windows-downloads-without-windows-genuine-advantage/</link><pubDate>Sat, 02 Jul 2011 00:00:00 +0000</pubDate><guid>https://lust.dev/2011/07/02/windows-downloads-without-windows-genuine-advantage/</guid><description>I found myself needing to download Virtual PC from Microsoft recently to test an application. I have a bonafide copy of windows, but my enterprise anti-virus won’t let me run WGA. No problem, we’ll just snoop around the MS site.
The following modal keeps prompting an ineffective download of WGA.
However, let’s fire up Chrome and look at the html in the page.
Hmm, check out the div GenuineCheck_Validated_Successful. I bet there is a link in it.</description></item><item><title>Cracking WordPress Hashcash</title><link>https://lust.dev/2010/07/17/cracking-wordpress-hashcash/</link><pubDate>Sat, 17 Jul 2010 00:00:00 +0000</pubDate><guid>https://lust.dev/2010/07/17/cracking-wordpress-hashcash/</guid><description>As many know, WordPress Hashcash is not a hashcash at all. This is more than merely semantics. A true hashcash would provide protections to blogs from spam bots, but WPHC does no such thing. Rather WPHC merely projects an aura of protection that even the most novitiate script kiddie can crack.
According to the authors of WPHC:
WP Hashcash is an antispam plugin that eradicates comment spam on WordPress blogs.</description></item></channel></rss>