<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on lust.dev</title><link>https://lust.dev/tags/aws/</link><description>Recent content in AWS on lust.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joseph Lust</copyright><lastBuildDate>Fri, 08 Jul 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Command Line Password Reset</title><link>https://lust.dev/2016/07/08/aws-cli-password-reset/</link><pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/07/08/aws-cli-password-reset/</guid><description>Your AWS login expired. Time to call the sysamdin, or can you solo this one?</description></item><item><title>Login With Broken AWS MFA Device</title><link>https://lust.dev/2016/06/14/login-broken-aws-mfa-device/</link><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/06/14/login-broken-aws-mfa-device/</guid><description>Your dog just broke your iPhone. How do you login to AWS without your MFA token?</description></item><item><title>Deploy Hugo Files to S3</title><link>https://lust.dev/2016/02/28/deploy-hugo-files-to-s3/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/28/deploy-hugo-files-to-s3/</guid><description>Easily deploy your Hugo static website on S3 with AWS CLI</description></item><item><title>AWS Hugo Hosting, HowTo</title><link>https://lust.dev/2016/02/27/hosting-hugo-on-aws/</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/27/hosting-hugo-on-aws/</guid><description>Easily Host your Hugo static website on CloudFront with AWS CLI</description></item><item><title>Farewell WordPress, Hello Hugo!</title><link>https://lust.dev/2016/02/21/farewell-wordpress-hello-hugo/</link><pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/21/farewell-wordpress-hello-hugo/</guid><description>Ditch the slow WordPress platform for high speed, static Hugo sites</description></item><item><title>Why I Chose AWS Over Digital Ocean</title><link>https://lust.dev/2014/10/29/why-choose-aws-over-digital-ocean/</link><pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate><guid>https://lust.dev/2014/10/29/why-choose-aws-over-digital-ocean/</guid><description>There&amp;rsquo;s no shortage of shills for Digital Ocean VM hosting on HackerNews lately. They extol the wonder of DO and disparage AWS. I view these accumulations of calumnies with curiosity, searching for the cogent retorts from AWS mavens. Finally, I broke down and threw $5 at a DO plan to see what I was missing. Turns out I&amp;rsquo;m not missing a thing.
The Good Modern CSS feel with candy buttons and very simple, limited UI Grandma could launch a VM Expense How do the shills keep yowling that DO is cheaper than EC2?</description></item><item><title>AWS EC2 Spot Market Volatility</title><link>https://lust.dev/2013/11/16/aws-ec2-spot-market-volatility/</link><pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate><guid>https://lust.dev/2013/11/16/aws-ec2-spot-market-volatility/</guid><description>The spot instance market does not often make sense. You first learn of it and think &amp;#8220;Wow! Why did I waste that money on a reserved instance when I can get the same price on demand?!?!?!&amp;#8221; Then you see pricing curves like this:
$6/hr for an instance!? 5000% markup! That is stultifying. This m1.medium is a perfectly fungible resource. You can:
Pay on-demand rate of $0.12/hr Reserve it for 3 years and pay a combined rate (amortizing down payment) of $0.</description></item><item><title>Custom CloudWatch Metric Tutorial: FreeMemory and Cron</title><link>https://lust.dev/2012/07/22/custom-cloudwatch-metric-tutorial-freememory-and-cron/</link><pubDate>Sun, 22 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/22/custom-cloudwatch-metric-tutorial-freememory-and-cron/</guid><description>Disclaimer: Custom metrics are $0.50 USD a month. Use judiciously. I want to be able to set alarms when nodes are getting memory starved and to analyze memory trends. Doing this for disk space, heap space, etc is a simple modification of the below tutorial.
Since the AWS docs have no complete example on how to do this, I wanted to provide one. I set this up using nothing but bash and cron (other examplesÂ use Python).</description></item><item><title>Easy Bulk CloudFront Invalidations vis AWS Console</title><link>https://lust.dev/2012/07/20/easy-bulk-cloudfront-invalidations-vis-aws-console/</link><pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/20/easy-bulk-cloudfront-invalidations-vis-aws-console/</guid><description>Google for invalidating a bunk of CloudFront files and you&amp;#8217;ll find many utilities to help you, but did you know you can do it easily through the AWS Console?
Just visitÂ CloudFront &amp;gt; Distribution Settings &amp;gt;Â InvalidationsÂ &amp;gt; Create Invalidation
Now provide the folder and wildcard to blow away a bunch of files!
i.e. images/* See, and you did not need to write a rate controlled script, pay a 3rd party monthly website, or enter your secret AWS credentials into some shady webapp!</description></item><item><title>LogRotate Apache Logs to Amazon S3</title><link>https://lust.dev/2012/07/15/logrotate-apache-logs-to-amazon-s3/</link><pubDate>Sun, 15 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/15/logrotate-apache-logs-to-amazon-s3/</guid><description>Legacy Log Rotation before gzip &amp;amp; scp I recently moved my site RunPartner to Amazon Web Services (AWS) from DreamHost because for just a few more peanuts a month I got a ton of enterprise grade services, and the server does not crash randomly any more. ðŸ˜Š
I&amp;#8217;m loving AWS, but one thing I wanted to do was consolidate all logs to S3. Let&amp;#8217;s say your site gets SlashDotted or Pinned.</description></item></channel></rss>