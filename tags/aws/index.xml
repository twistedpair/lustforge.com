<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aws on lust.dev</title><link>https://lust.dev/tags/aws/</link><description>Recent content in Aws on lust.dev</description><generator>Hugo</generator><language>en-us</language><copyright>Joe Lust</copyright><lastBuildDate>Fri, 08 Jul 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Command Line Password Reset</title><link>https://lust.dev/2016/07/08/aws-cli-password-reset/</link><pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/07/08/aws-cli-password-reset/</guid><description>Your AWS login expired. Time to call the sysamdin, or can you solo this one?</description></item><item><title>Login With Broken AWS MFA Device</title><link>https://lust.dev/2016/06/14/login-broken-aws-mfa-device/</link><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/06/14/login-broken-aws-mfa-device/</guid><description>Your dog just broke your iPhone. How do you login to AWS without your MFA token?</description></item><item><title>Deploy Hugo Files to S3</title><link>https://lust.dev/2016/02/28/deploy-hugo-files-to-s3/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/28/deploy-hugo-files-to-s3/</guid><description>Easily deploy your Hugo static website on S3 with AWS CLI</description></item><item><title>AWS Hugo Hosting, HowTo</title><link>https://lust.dev/2016/02/27/hosting-hugo-on-aws/</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/27/hosting-hugo-on-aws/</guid><description>Easily Host your Hugo static website on CloudFront with AWS CLI</description></item><item><title>Farewell WordPress, Hello Hugo!</title><link>https://lust.dev/2016/02/21/farewell-wordpress-hello-hugo/</link><pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate><guid>https://lust.dev/2016/02/21/farewell-wordpress-hello-hugo/</guid><description>Ditch the slow WordPress platform for high speed, static Hugo sites</description></item><item><title>Why I Chose AWS Over Digital Ocean</title><link>https://lust.dev/2014/10/29/why-choose-aws-over-digital-ocean/</link><pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate><guid>https://lust.dev/2014/10/29/why-choose-aws-over-digital-ocean/</guid><description>&lt;p>There&amp;rsquo;s no shortage of &lt;a href="https://news.ycombinator.com/item?id=7720134">shills&lt;/a> for Digital Ocean VM hosting on &lt;a href="https://news.ycombinator.com/item?id=8926631">HackerNews&lt;/a> lately. They &lt;a href="https://news.ycombinator.com/item?id=9522486">extol&lt;/a> the wonder of DO and disparage AWS. I view these accumulations of calumnies with curiosity, searching for the cogent retorts from AWS mavens. Finally, I broke down and threw &lt;a href="https://www.digitalocean.com/pricing/">$5&lt;/a> at a DO plan to see what I was missing. Turns out I&amp;rsquo;m not missing a thing.&lt;/p>
&lt;h2 id="the-good">The Good&lt;/h2>
&lt;ul>
&lt;li>Modern CSS feel with candy buttons and very simple, limited UI&lt;/li>
&lt;li>Grandma could launch a VM&lt;/li>
&lt;/ul>
&lt;h2 id="expense">Expense&lt;/h2>
&lt;p>How do the shills keep yowling that DO is cheaper than EC2? The 8GB ram DO &amp;ldquo;droplet&amp;rdquo; is presently &lt;code>¢11.9/hr&lt;/code>. On EC2 you can get a spot instance with that ram for &lt;code>¢0.3/hr&lt;/code>. That&amp;rsquo;s right, for 1/3 of a penny per hour, I can get something bigger than the most powerful droplet on DO. &lt;strong>Clearly DO is not &amp;ldquo;cheaper.&amp;rdquo;&lt;/strong>&lt;/p></description></item><item><title>AWS EC2 Spot Market Volatility</title><link>https://lust.dev/2013/11/16/aws-ec2-spot-market-volatility/</link><pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate><guid>https://lust.dev/2013/11/16/aws-ec2-spot-market-volatility/</guid><description>&lt;p>The spot instance market does not often make sense. You first learn of it and think “Wow! Why did I waste that money on a reserved instance when I can get the same price on demand?!?!?!” Then you see pricing curves like this:&lt;/p>
&lt;figure>&lt;img src="../../img/aws_price_curve.png">
&lt;/figure>

&lt;p>$6/hr for an instance!? &lt;strong>5000% markup!&lt;/strong> That is stultifying. This &lt;code>m1.medium&lt;/code> is a perfectly fungible resource. You can:&lt;/p>
&lt;ul>
&lt;li>Pay on-demand rate of &lt;strong>$0.12/hr&lt;/strong>&lt;/li>
&lt;li>Reserve it for 3 years and pay a combined rate (amortizing down payment) of &lt;strong>$0.042/hr&lt;/strong>&lt;/li>
&lt;li>Rent it at the median Spot Market rate of &lt;strong>$0.013/hr&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>$6/hr is 30% more than that most expensive instance AWS sells (&lt;code>hs1.8xlarge&lt;/code>, $4.60/hr), and this instance is puny by comparison.&lt;/p></description></item><item><title>Custom CloudWatch Metric Tutorial: FreeMemory and Cron</title><link>https://lust.dev/2012/07/22/custom-cloudwatch-metric-tutorial-freememory-and-cron/</link><pubDate>Sun, 22 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/22/custom-cloudwatch-metric-tutorial-freememory-and-cron/</guid><description>&lt;h3 id="disclaimer-custom-metrics-are-050-usd-a-month-use-judiciously">Disclaimer: Custom metrics are $0.50 USD a month. Use judiciously.&lt;/h3>
&lt;p>I want to be able to set alarms when nodes are getting memory starved and to analyze memory trends. Doing this for disk space, heap space, etc is a simple modification of the below tutorial.&lt;/p>
&lt;p>Since the AWS docs have no complete example on how to do this, I wanted to provide one. I set this up using nothing but bash and cron (&lt;!-- raw HTML omitted -->other examples&lt;!-- raw HTML omitted --> use Python). My goal was a very simple example.&lt;/p></description></item><item><title>Easy Bulk CloudFront Invalidations vis AWS Console</title><link>https://lust.dev/2012/07/20/easy-bulk-cloudfront-invalidations-vis-aws-console/</link><pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/20/easy-bulk-cloudfront-invalidations-vis-aws-console/</guid><description>&lt;p>Google for invalidating a bunk of CloudFront files and you’ll find many utilities to help you, but did you know you can do it easily through the AWS Console?&lt;/p>
&lt;p>Just visit &lt;strong>CloudFront &amp;gt; Distribution Settings &amp;gt; Invalidations &amp;gt; Create Invalidation&lt;/strong>&lt;/p>
&lt;p>Now provide the folder and wildcard to blow away a bunch of files!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">i.e. images/*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="../../img/cloudfront_invalidations.png">
&lt;/figure>

&lt;p>See, and you did not need to write a rate controlled script, pay a 3rd party monthly website, or enter your secret AWS credentials into some shady webapp!&lt;/p></description></item><item><title>LogRotate Apache Logs to Amazon S3</title><link>https://lust.dev/2012/07/15/logrotate-apache-logs-to-amazon-s3/</link><pubDate>Sun, 15 Jul 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/07/15/logrotate-apache-logs-to-amazon-s3/</guid><description>&lt;figure>&lt;img src="../../img/logrotate.png">&lt;figcaption>
 &lt;h4>Legacy Log Rotation before gzip &amp;amp; scp&lt;/h4>
 &lt;/figcaption>
&lt;/figure>

&lt;p>I recently moved my site &lt;a href="www.runpartner.com">RunPartner&lt;/a> to Amazon Web Services (AWS) from DreamHost because for just a few more peanuts a month I got a ton of enterprise grade services, and the server does not crash randomly any more. 😊&lt;/p>
&lt;p>I’m loving AWS, but one thing I wanted to do was consolidate all logs to S3. Let’s say your site gets SlashDotted or Pinned. One of the first failure modes is that your logs swell up, and you’re out of disk space. Since my EC2 instance has just 8GB, this is possible. But why not use that infinite storage pool in the sky, S3? Perfect.&lt;/p></description></item></channel></rss>