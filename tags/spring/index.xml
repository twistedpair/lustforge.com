<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring on lust.dev</title><link>https://lust.dev/tags/spring/</link><description>Recent content in Spring on lust.dev</description><generator>Hugo</generator><language>en-us</language><copyright>Joe Lust</copyright><lastBuildDate>Tue, 06 Aug 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>Mockito Fails to Inject Autowired Dependency</title><link>https://lust.dev/2013/08/06/mockito-fails-to-inject-autowired-dependency/</link><pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate><guid>https://lust.dev/2013/08/06/mockito-fails-to-inject-autowired-dependency/</guid><description>&lt;p>If you must test Spring beans and you’ve used &lt;code>@autowired&lt;/code> in them, then &lt;strong>you’ll need to use Mockito&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>EasyMock&lt;/strong> is &lt;em>easy&lt;/em> for &lt;em>easy things&lt;/em>, but breaks down in this more complex situation. No worries, just let Mockito inject those DI dependencies for you. Ugh oh… they are not injecting. But you’ve read their docs and &lt;em>they should inject!&lt;/em> Sadness.&lt;/p>
&lt;p>Let’s set the stage. Enter our sample class stage left.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SampleImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@autowired&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Foo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">someFoo&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bar&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">someBar&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">SampleImpl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bar&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">someBar&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">someBar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">someBar&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">doSomething&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">someFoo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">doSomething&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">someBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">doSomthing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is a typical test for it, that will fail because &lt;code>someFoo&lt;/code> is &lt;code>NULL&lt;/code> as it was never injected.&lt;/p></description></item><item><title>Caused by: java.lang.ClassNotFoundException: org.apache.ibatis.mapping.DatabaseIdProvider</title><link>https://lust.dev/2013/07/27/caused-by-java-lang-classnotfoundexception-org-apache-ibatis-mapping-databaseidprovider/</link><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid>https://lust.dev/2013/07/27/caused-by-java-lang-classnotfoundexception-org-apache-ibatis-mapping-databaseidprovider/</guid><description>&lt;p>Perhaps you’ve had this trace recently while trying to get myBatis working on Spring:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> Caused by: java.lang.ClassNotFoundException: org.apache.ibatis.mapping.DatabaseIdProvider
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.net.URLClassLoader&lt;span class="nv">$1&lt;/span>.run&lt;span class="o">(&lt;/span>URLClassLoader.java:217&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.security.AccessController.doPrivileged&lt;span class="o">(&lt;/span>Native Method&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.net.URLClassLoader.findClass&lt;span class="o">(&lt;/span>URLClassLoader.java:205&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.lang.ClassLoader.loadClass&lt;span class="o">(&lt;/span>ClassLoader.java:321&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at sun.misc.Launcher&lt;span class="nv">$AppClassLoader&lt;/span>.loadClass&lt;span class="o">(&lt;/span>Launcher.java:294&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.lang.ClassLoader.loadClass&lt;span class="o">(&lt;/span>ClassLoader.java:266&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... &lt;span class="m">57&lt;/span> more
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is the bane of open source. You can’t always depend on quality releases. Don’t worry, you followed the tutorial correctly. Let’s take a look at the package’s history in Maven Central.&lt;/p></description></item><item><title>Spring’s RememberMe and BadCredentialsException</title><link>https://lust.dev/2012/10/17/springs-rememberme-and-badcredentialsexception/</link><pubDate>Wed, 17 Oct 2012 00:00:00 +0000</pubDate><guid>https://lust.dev/2012/10/17/springs-rememberme-and-badcredentialsexception/</guid><description>&lt;p>Spring is pretty swell, but the documentation is never what you need. It would be like reading an anatomy book about every organ in the body, but never being shown a picture of all of them together, and then trying to conduct a surgery.&lt;/p>
&lt;p>I was assembling Spring Security for a rewrite of &lt;a href="http://www.runpartner.com">RunPartner.com&lt;/a> and read the &lt;!-- raw HTML omitted -->RememberMe chapter of Spring Security&lt;!-- raw HTML omitted -->.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;http&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;remember-me&lt;/span> &lt;span class="na">key=&lt;/span>&lt;span class="s">&amp;#34;myAppKey&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/http&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since I needed a database backed implementation, I liked the next example.&lt;/p></description></item></channel></rss>