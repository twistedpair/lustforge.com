<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Continuous Integration on lust.dev</title><link>https://lust.dev/tags/continuous-integration/</link><description>Recent content in Continuous Integration on lust.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joseph Lust</copyright><lastBuildDate>Sat, 28 Feb 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/continuous-integration/index.xml" rel="self" type="application/rss+xml"/><item><title>Don’t use Git to Deploy Code</title><link>https://lust.dev/2015/02/28/dont-use-git-to-deploy-code/</link><pubDate>Sat, 28 Feb 2015 00:00:00 +0000</pubDate><guid>https://lust.dev/2015/02/28/dont-use-git-to-deploy-code/</guid><description>Just don’t. If you can’t reason why, please stop developing code critical to your business.
When it works, it works Git is great. Push here, pull there. It works so well that you might be fatuously convinced it’s the perfect tool to deploy production code. Even worse, it might appear to work well at this task, further reinforcing your choice However, the Achilles Heel of any DVCS is your origin provider.</description></item><item><title>Jenkins vs. Teamcity – The Better CI Tool</title><link>https://lust.dev/2014/08/21/jenkins-vs-teamcity-the-better-ci-tool/</link><pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate><guid>https://lust.dev/2014/08/21/jenkins-vs-teamcity-the-better-ci-tool/</guid><description>Top 4 reasons Not to use Jenkins for CI</description></item></channel></rss>