<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ExtJs on lust.dev</title><link>https://lust.dev/tags/extjs/</link><description>Recent content in ExtJs on lust.dev</description><generator>Hugo</generator><language>en-us</language><copyright>Joe Lust</copyright><lastBuildDate>Wed, 06 Jul 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/extjs/index.xml" rel="self" type="application/rss+xml"/><item><title>Open ExtJs Menu on Mouseover</title><link>https://lust.dev/2011/07/06/open-extjs-menu-on-mouseover/</link><pubDate>Wed, 06 Jul 2011 00:00:00 +0000</pubDate><guid>https://lust.dev/2011/07/06/open-extjs-menu-on-mouseover/</guid><description>&lt;p>Would you believe there is no way to open an ExtJs toolbar menu when you hover over the corresponding button? This functionality is all over the ExtJs &lt;a href="https://www.sencha.com">homepage&lt;/a>, but not in their framework. Boo! Nope, nothing without pulling the buttons out of the toolbar (see &lt;!-- raw HTML omitted -->here&lt;!-- raw HTML omitted -->), which is a no go for existing applications.&lt;/p>
&lt;p>So, I present you with the &lt;strong>HoverButton&lt;/strong>. It is just like the standard button, but hides after &lt;code>250ms&lt;/code> of mouseout from the button or the opened menu. Just use the &lt;code>xtype&lt;/code> of &lt;strong>hoverButton&lt;/strong> where you used &lt;strong>button&lt;/strong> before. That was easy!&lt;/p></description></item><item><title>ExtJs Field getForm() Override</title><link>https://lust.dev/2011/06/19/extjs-field-getform-override/</link><pubDate>Sun, 19 Jun 2011 00:00:00 +0000</pubDate><guid>https://lust.dev/2011/06/19/extjs-field-getform-override/</guid><description>&lt;p>When using the DOM directly, if you have the element reference to an &lt;code>&amp;lt;INPUT&amp;gt;&lt;/code> object, you can reference its parent via &lt;code>el.form&lt;/code>. However, in ExtJs, &lt;strong>there is no such accessor for the form of field&lt;/strong>. The following ExtJs override adds the &lt;code>getForm()&lt;/code> method to a field which will search upward through the ExtDOM until it finds a parent form, or hits a recursion depth of 10.&lt;/p>
&lt;p>Example usage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Example useage
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">myField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Ext&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getCmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;myField&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">myField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getForm&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Override code: Include this before your form.&lt;/p></description></item><item><title>Update ExtJs TabPanel Tab Title</title><link>https://lust.dev/2011/05/01/update-extjs-tab-title/</link><pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate><guid>https://lust.dev/2011/05/01/update-extjs-tab-title/</guid><description>&lt;p>Isn’t &lt;a href="https://www.sencha.com/products/extjs/">ExtJs&lt;/a> the cat’s meow? I think so, but many cats have hairballs. For ExtJs, this includes missing the ability to update the title of a &lt;code>TabPanel&lt;/code> tab title once it has been rendered. Sure, you can find the &lt;em>item&lt;/em> and &lt;em>title&lt;/em> properties for your tab post-render, but that won’t update your page. You need to crawl the DOM. I’ve created an update to do just this.&lt;/p>
&lt;p>Just paste the below override in your code and you can then call the &lt;code>setTabTitle(tabNo,newTitle)&lt;/code> method to update a given tab title. You’ll need to know the index of your tab in the tab panel.&lt;/p></description></item><item><title>Extjs Hidden Textfield Missing</title><link>https://lust.dev/2011/04/03/extjs-hidden-textfield-missing/</link><pubDate>Sun, 03 Apr 2011 00:00:00 +0000</pubDate><guid>https://lust.dev/2011/04/03/extjs-hidden-textfield-missing/</guid><description>&lt;p>I love &lt;a href="https://www.sencha.com/products/extjs/">ExtJS&lt;/a>, but some days it just does not love me back.&lt;/p>
&lt;p>For instance, if you have a hidden textfield, and you &lt;strong>don&amp;rsquo;t set the width property, it won&amp;rsquo;t be added to your form&lt;/strong>. Sure, you say, why would you need the width for a hidden input? Well, ExtJS thinks you might call &lt;code>myHiddenTextfield.show()&lt;/code> some day, so it still needs to put it in there with a width. No width, no love.&lt;/p></description></item></channel></rss>