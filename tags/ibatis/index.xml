<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iBatis on lust.dev</title><link>https://lust.dev/tags/ibatis/</link><description>Recent content in iBatis on lust.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joseph Lust</copyright><lastBuildDate>Sun, 12 Oct 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/ibatis/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Immutable Objects with MyBatis</title><link>https://lust.dev/2014/10/12/using-immutable-objects-with-mybatis/</link><pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate><guid>https://lust.dev/2014/10/12/using-immutable-objects-with-mybatis/</guid><description>Immutable is Beautiful I&amp;#8217;m a fan of immutable objects. We all know the benefits; simple, no mutators, thread safe, cache word optimizable. However, I see far too many MyBatis (and iBatis) developers adding no arg constructors to their POJO&amp;#8217;s simply so that MyBatis can reflect and set all of the values into the field setters. I&amp;#8217;ll ask &amp;#8220;why does this POJO need to be mutated&amp;#8221; and they quip that it doesn&amp;#8217;t, but these setters and protected no-arg constructors are needed by MyBatis.</description></item></channel></rss>