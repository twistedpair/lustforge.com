<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance Tuning on lust.dev</title><link>https://lust.dev/tags/performance-tuning/</link><description>Recent content in Performance Tuning on lust.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joe Lust</copyright><lastBuildDate>Tue, 04 Nov 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://lust.dev/tags/performance-tuning/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynatrace Memory Sensor Anti-Patterns</title><link>https://lust.dev/2014/11/04/dynatrace-memory-sensor-anti-patterns/</link><pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate><guid>https://lust.dev/2014/11/04/dynatrace-memory-sensor-anti-patterns/</guid><description>This is a collection of Dynatrace actions I’ve learned to avoid. I’ll add more as my Dynatrace journey evolves.
Judiciously Apply Memory Sensors If one Memory Sensor is good, then many must be great? Sadly not. Memory sensors are useful as they allow Selective Memory Snapshots to be taken of a subset of the heap graph without taking an entire heap dump. They are delightfully fast and light, but too many will spoil the party.</description></item></channel></rss>